GET /repos/golang/go/commits/da8f037b57241b0b84fab9d4c9e69b53e7118850?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:36:00 GMT
content-type: application/json; charset=utf-8
content-length: 15232
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4864
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "53afb6cb31c070abae929377efaab6de"
last-modified: Wed, 15 Feb 2012 03:41:47 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: 318e55760cf7cdb40e61175a4d36cd32
x-github-request-id: 4E320659:6DAB:12654F2:56D35A30

{"sha":"da8f037b57241b0b84fab9d4c9e69b53e7118850","commit":{"author":{"name":"Nigel Tao","email":"nigeltao@golang.org","date":"2012-02-15T03:41:47Z"},"committer":{"name":"Nigel Tao","email":"nigeltao@golang.org","date":"2012-02-15T03:41:47Z"},"message":"fix: add fix for bufio, gzip, zlib NewWriterXxx changes.\n\nFixes #2979.\n\nR=rsc, r\nCC=golang-dev\nhttps://golang.org/cl/5664046","tree":{"sha":"2f7c7c30cc4b1b25ad6df9f5ab1c0f0b38adf906","url":"https://api.github.com/repos/golang/go/git/trees/2f7c7c30cc4b1b25ad6df9f5ab1c0f0b38adf906"},"url":"https://api.github.com/repos/golang/go/git/commits/da8f037b57241b0b84fab9d4c9e69b53e7118850","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/da8f037b57241b0b84fab9d4c9e69b53e7118850","html_url":"https://github.com/golang/go/commit/da8f037b57241b0b84fab9d4c9e69b53e7118850","comments_url":"https://api.github.com/repos/golang/go/commits/da8f037b57241b0b84fab9d4c9e69b53e7118850/comments","author":{"login":"nigeltao","id":8565232,"avatar_url":"https://avatars.githubusercontent.com/u/8565232?v=3","gravatar_id":"","url":"https://api.github.com/users/nigeltao","html_url":"https://github.com/nigeltao","followers_url":"https://api.github.com/users/nigeltao/followers","following_url":"https://api.github.com/users/nigeltao/following{/other_user}","gists_url":"https://api.github.com/users/nigeltao/gists{/gist_id}","starred_url":"https://api.github.com/users/nigeltao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nigeltao/subscriptions","organizations_url":"https://api.github.com/users/nigeltao/orgs","repos_url":"https://api.github.com/users/nigeltao/repos","events_url":"https://api.github.com/users/nigeltao/events{/privacy}","received_events_url":"https://api.github.com/users/nigeltao/received_events","type":"User","site_admin":false},"committer":{"login":"nigeltao","id":8565232,"avatar_url":"https://avatars.githubusercontent.com/u/8565232?v=3","gravatar_id":"","url":"https://api.github.com/users/nigeltao","html_url":"https://github.com/nigeltao","followers_url":"https://api.github.com/users/nigeltao/followers","following_url":"https://api.github.com/users/nigeltao/following{/other_user}","gists_url":"https://api.github.com/users/nigeltao/gists{/gist_id}","starred_url":"https://api.github.com/users/nigeltao/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/nigeltao/subscriptions","organizations_url":"https://api.github.com/users/nigeltao/orgs","repos_url":"https://api.github.com/users/nigeltao/repos","events_url":"https://api.github.com/users/nigeltao/events{/privacy}","received_events_url":"https://api.github.com/users/nigeltao/received_events","type":"User","site_admin":false},"parents":[{"sha":"6fae34db94fe02f60edb207c95037a9bf8611e71","url":"https://api.github.com/repos/golang/go/commits/6fae34db94fe02f60edb207c95037a9bf8611e71","html_url":"https://github.com/golang/go/commit/6fae34db94fe02f60edb207c95037a9bf8611e71"}],"stats":{"total":217,"additions":199,"deletions":18},"files":[{"sha":"a2cd0456a6e7f7282f001137e2d016b8462426e7","filename":"doc/go1.html","status":"modified","additions":13,"deletions":9,"changes":22,"blob_url":"https://github.com/golang/go/blob/da8f037b57241b0b84fab9d4c9e69b53e7118850/doc/go1.html","raw_url":"https://github.com/golang/go/raw/da8f037b57241b0b84fab9d4c9e69b53e7118850/doc/go1.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/go1.html?ref=da8f037b57241b0b84fab9d4c9e69b53e7118850","patch":"@@ -578,7 +578,7 @@ <h3 id=\"exp\">The package tree exp</h3>\n <em>Updating</em>:\n Code that uses packages in <code>exp</code> will need to be updated by hand,\n or else compiled from an installation that has <code>exp</code> available.\n-The go fix tool or the compiler will complain about such uses.\n+The <code>go fix</code> tool or the compiler will complain about such uses.\n </p>\n \n <h3 id=\"old\">The package tree old</h3>\n@@ -603,7 +603,7 @@ <h3 id=\"old\">The package tree old</h3>\n <em>Updating</em>:\n Code that uses packages now in <code>old</code> will need to be updated by hand,\n or else compiled from an installation that has <code>old</code> available.\n-The go fix tool will warn about such uses.\n+The <code>go fix</code> tool will warn about such uses.\n </p>\n \n <h3 id=\"deleted\">Deleted packages</h3>\n@@ -863,8 +863,8 @@ <h3 id=\"archive_zip\">The archive/zip package</h3>\n </p>\n \n <p>\n-<i>Updating:</i> What little code is affected will be caught by the compiler\n-and must be updated by hand. Such code is almost certainly incorrect.\n+<em>Updating</em>:\n+What little code is affected will be caught by the compiler and must be updated by hand.\n </p>\n \n <h3 id=\"bufio\">The bufio package</h3>\n@@ -879,7 +879,8 @@ <h3 id=\"bufio\">The bufio package</h3>\n \n <p>\n <em>Updating</em>:\n-What little code is affected will be caught by the compiler and must be updated by hand.\n+Running <code>go fix</code> will update calls that assign the error to _.\n+Calls that aren't fixed will be caught by the compiler and must be updated by hand.\n </p>\n \n <h3 id=\"bufio\">The compress/flate, compress/gzip and compress/zlib packages</h3>\n@@ -898,7 +899,8 @@ <h3 id=\"bufio\">The compress/flate, compress/gzip and compress/zlib packages</h3>\n \n <p>\n <em>Updating</em>\n-What little code is affected will be caught by the compiler and must be updated by hand.\n+Running <code>go fix</code> will update old names and calls that assign the error to _.\n+Calls that aren't fixed will be caught by the compiler and must be updated by hand.\n </p>\n \n <h3 id=\"crypto_aes_des\">The crypto/aes and crypto/des packages</h3>\n@@ -1425,8 +1427,10 @@ <h3 id=\"os\">The os package</h3>\n The <a href=\"/pkg/os/#File.Fd\"><code>Fd</code></a> method on files now\n also returns a <code>uintptr</code>.</p>\n \n-<p><em>Updating</em>: Code will fail to compile and must be updated\n-by hand.  </p>\n+<p>\n+<em>Updating</em>:\n+What little code is affected will be caught by the compiler and must be updated by hand.\n+</p>\n \n <h4 id=\"os_fileinfo\">The os.FileInfo type</h4>\n \n@@ -1669,7 +1673,7 @@ <h3 id=\"strconv\">The strconv package</h3>\n <br>\n ยง <code>Atoi</code> persists but <code>Atoui</code> and <code>Atof32</code> do not, so\n they may require\n-a cast that must be added by hand; the go fix tool will warn about it.\n+a cast that must be added by hand; the <code>go fix</code> tool will warn about it.\n </p>\n \n "},{"sha":"90bc9fc7f61826e162ddf1b6e4d5a81b8d137cd2","filename":"doc/go1.tmpl","status":"modified","additions":13,"deletions":9,"changes":22,"blob_url":"https://github.com/golang/go/blob/da8f037b57241b0b84fab9d4c9e69b53e7118850/doc/go1.tmpl","raw_url":"https://github.com/golang/go/raw/da8f037b57241b0b84fab9d4c9e69b53e7118850/doc/go1.tmpl","contents_url":"https://api.github.com/repos/golang/go/contents/doc/go1.tmpl?ref=da8f037b57241b0b84fab9d4c9e69b53e7118850","patch":"@@ -502,7 +502,7 @@ If they are installed, they now reside in <code>$GOROOT/bin/tool</code>.\n <em>Updating</em>:\n Code that uses packages in <code>exp</code> will need to be updated by hand,\n or else compiled from an installation that has <code>exp</code> available.\n-The go fix tool or the compiler will complain about such uses.\n+The <code>go fix</code> tool or the compiler will complain about such uses.\n </p>\n \n <h3 id=\"old\">The package tree old</h3>\n@@ -527,7 +527,7 @@ The packages in their new locations are:\n <em>Updating</em>:\n Code that uses packages now in <code>old</code> will need to be updated by hand,\n or else compiled from an installation that has <code>old</code> available.\n-The go fix tool will warn about such uses.\n+The <code>go fix</code> tool will warn about such uses.\n </p>\n \n <h3 id=\"deleted\">Deleted packages</h3>\n@@ -767,8 +767,8 @@ longer has a <code>Write</code> method. Its presence was a mistake.\n </p>\n \n <p>\n-<i>Updating:</i> What little code is affected will be caught by the compiler\n-and must be updated by hand. Such code is almost certainly incorrect.\n+<em>Updating</em>:\n+What little code is affected will be caught by the compiler and must be updated by hand.\n </p>\n \n <h3 id=\"bufio\">The bufio package</h3>\n@@ -783,7 +783,8 @@ If the argument size is too small or invalid, it is adjusted.\n \n <p>\n <em>Updating</em>:\n-What little code is affected will be caught by the compiler and must be updated by hand.\n+Running <code>go fix</code> will update calls that assign the error to _.\n+Calls that aren't fixed will be caught by the compiler and must be updated by hand.\n </p>\n \n <h3 id=\"bufio\">The compress/flate, compress/gzip and compress/zlib packages</h3>\n@@ -802,7 +803,8 @@ to <code>Writer</code> and <code>Reader</code>. Package <code>flate</code>'s\n \n <p>\n <em>Updating</em>\n-What little code is affected will be caught by the compiler and must be updated by hand.\n+Running <code>go fix</code> will update old names and calls that assign the error to _.\n+Calls that aren't fixed will be caught by the compiler and must be updated by hand.\n </p>\n \n <h3 id=\"crypto_aes_des\">The crypto/aes and crypto/des packages</h3>\n@@ -1328,8 +1330,10 @@ now takes a <code>uintptr</code> fd, instead of an <code>int</code>.\n The <a href=\"/pkg/os/#File.Fd\"><code>Fd</code></a> method on files now\n also returns a <code>uintptr</code>.</p>\n \n-<p><em>Updating</em>: Code will fail to compile and must be updated\n-by hand.  </p>\n+<p>\n+<em>Updating</em>:\n+What little code is affected will be caught by the compiler and must be updated by hand.\n+</p>\n \n <h4 id=\"os_fileinfo\">The os.FileInfo type</h4>\n \n@@ -1572,7 +1576,7 @@ Running <code>go fix</code> will update almost all code affected by the change.\n <br>\n ยง <code>Atoi</code> persists but <code>Atoui</code> and <code>Atof32</code> do not, so\n they may require\n-a cast that must be added by hand; the go fix tool will warn about it.\n+a cast that must be added by hand; the <code>go fix</code> tool will warn about it.\n </p>\n \n "},{"sha":"4befe24fb67f4a91ce4488094439b244b188c62a","filename":"src/cmd/fix/newwriter.go","status":"added","additions":90,"deletions":0,"changes":90,"blob_url":"https://github.com/golang/go/blob/da8f037b57241b0b84fab9d4c9e69b53e7118850/src/cmd/fix/newwriter.go","raw_url":"https://github.com/golang/go/raw/da8f037b57241b0b84fab9d4c9e69b53e7118850/src/cmd/fix/newwriter.go","contents_url":"https://api.github.com/repos/golang/go/contents/src/cmd/fix/newwriter.go?ref=da8f037b57241b0b84fab9d4c9e69b53e7118850","patch":"@@ -0,0 +1,90 @@\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+import (\n+\t\"go/ast\"\n+)\n+\n+func init() {\n+\tregister(newWriterFix)\n+}\n+\n+var newWriterFix = fix{\n+\t\"newWriter\",\n+\t\"2012-02-14\",\n+\tnewWriter,\n+\t`Adapt bufio, gzip and zlib NewWriterXxx calls for whether they return errors.\n+\n+Also rename gzip.Compressor and gzip.Decompressor to gzip.Writer and gzip.Reader.\n+\n+http://codereview.appspot.com/5639057 and\n+http://codereview.appspot.com/5642054\n+`,\n+}\n+\n+func newWriter(f *ast.File) bool {\n+\tif !imports(f, \"bufio\") && !imports(f, \"compress/gzip\") && !imports(f, \"compress/zlib\") {\n+\t\treturn false\n+\t}\n+\n+\tfixed := false\n+\twalk(f, func(n interface{}) {\n+\t\tswitch n := n.(type) {\n+\t\tcase *ast.SelectorExpr:\n+\t\t\tif isTopName(n.X, \"gzip\") {\n+\t\t\t\tswitch n.Sel.String() {\n+\t\t\t\tcase \"Compressor\":\n+\t\t\t\t\tn.Sel = &ast.Ident{Name: \"Writer\"}\n+\t\t\t\t\tfixed = true\n+\t\t\t\tcase \"Decompressor\":\n+\t\t\t\t\tn.Sel = &ast.Ident{Name: \"Reader\"}\n+\t\t\t\t\tfixed = true\n+\t\t\t\t}\n+\t\t\t} else if isTopName(n.X, \"zlib\") {\n+\t\t\t\tif n.Sel.String() == \"NewWriterDict\" {\n+\t\t\t\t\tn.Sel = &ast.Ident{Name: \"NewWriterLevelDict\"}\n+\t\t\t\t\tfixed = true\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\tcase *ast.AssignStmt:\n+\t\t\t// Drop the \", _\" in assignments of the form:\n+\t\t\t//\tw0, _ = gzip.NewWriter(w1)\n+\t\t\tif len(n.Lhs) != 2 || len(n.Rhs) != 1 {\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\ti, ok := n.Lhs[1].(*ast.Ident)\n+\t\t\tif !ok {\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\tif i.String() != \"_\" {\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\tc, ok := n.Rhs[0].(*ast.CallExpr)\n+\t\t\tif !ok {\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\ts, ok := c.Fun.(*ast.SelectorExpr)\n+\t\t\tif !ok {\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\tsel := s.Sel.String()\n+\t\t\tswitch {\n+\t\t\tcase isTopName(s.X, \"bufio\") && (sel == \"NewReaderSize\" || sel == \"NewWriterSize\"):\n+\t\t\t\t// No-op.\n+\t\t\tcase isTopName(s.X, \"gzip\") && sel == \"NewWriter\":\n+\t\t\t\t// No-op.\n+\t\t\tcase isTopName(s.X, \"zlib\") && sel == \"NewWriter\":\n+\t\t\t\t// No-op.\n+\t\t\tdefault:\n+\t\t\t\treturn\n+\t\t\t}\n+\t\t\tn.Lhs = n.Lhs[:1]\n+\t\t\tfixed = true\n+\t\t}\n+\t})\n+\treturn fixed\n+}"},{"sha":"1f59628a0dc4be3993ed90fda6d1a29e23349454","filename":"src/cmd/fix/newwriter_test.go","status":"added","additions":83,"deletions":0,"changes":83,"blob_url":"https://github.com/golang/go/blob/da8f037b57241b0b84fab9d4c9e69b53e7118850/src/cmd/fix/newwriter_test.go","raw_url":"https://github.com/golang/go/raw/da8f037b57241b0b84fab9d4c9e69b53e7118850/src/cmd/fix/newwriter_test.go","contents_url":"https://api.github.com/repos/golang/go/contents/src/cmd/fix/newwriter_test.go?ref=da8f037b57241b0b84fab9d4c9e69b53e7118850","patch":"@@ -0,0 +1,83 @@\n+// Copyright 2012 The Go Authors.  All rights reserved.\n+// Use of this source code is governed by a BSD-style\n+// license that can be found in the LICENSE file.\n+\n+package main\n+\n+func init() {\n+\taddTestCases(newWriterTests, newWriter)\n+}\n+\n+var newWriterTests = []testCase{\n+\t{\n+\t\tName: \"newWriter.0\",\n+\t\tIn: `package main\n+\n+import (\n+\t\"bufio\"\n+\t\"compress/gzip\"\n+\t\"compress/zlib\"\n+\t\"io\"\n+\n+\t\"foo\"\n+)\n+\n+func f() *gzip.Compressor {\n+\tvar (\n+\t\t_ gzip.Compressor\n+\t\t_ *gzip.Decompressor\n+\t\t_ struct {\n+\t\t\tW *gzip.Compressor\n+\t\t\tR gzip.Decompressor\n+\t\t}\n+\t)\n+\n+\tvar w io.Writer\n+\tbr := bufio.NewReader(nil)\n+\tbr, _ = bufio.NewReaderSize(nil, 256)\n+\tbw, err := bufio.NewWriterSize(w, 256) // Unfixable, as it declares an err variable.\n+\tbw, _ = bufio.NewWriterSize(w, 256)\n+\tfw, _ := foo.NewWriter(w)\n+\tgw, _ := gzip.NewWriter(w)\n+\tgw, _ = gzip.NewWriter(w)\n+\tzw, _ := zlib.NewWriter(w)\n+\t_ = zlib.NewWriterDict(zw, 0, nil)\n+\treturn gw\n+}\n+`,\n+\t\tOut: `package main\n+\n+import (\n+\t\"bufio\"\n+\t\"compress/gzip\"\n+\t\"compress/zlib\"\n+\t\"io\"\n+\n+\t\"foo\"\n+)\n+\n+func f() *gzip.Writer {\n+\tvar (\n+\t\t_ gzip.Writer\n+\t\t_ *gzip.Reader\n+\t\t_ struct {\n+\t\t\tW *gzip.Writer\n+\t\t\tR gzip.Reader\n+\t\t}\n+\t)\n+\n+\tvar w io.Writer\n+\tbr := bufio.NewReader(nil)\n+\tbr = bufio.NewReaderSize(nil, 256)\n+\tbw, err := bufio.NewWriterSize(w, 256) // Unfixable, as it declares an err variable.\n+\tbw = bufio.NewWriterSize(w, 256)\n+\tfw, _ := foo.NewWriter(w)\n+\tgw := gzip.NewWriter(w)\n+\tgw = gzip.NewWriter(w)\n+\tzw := zlib.NewWriter(w)\n+\t_ = zlib.NewWriterLevelDict(zw, 0, nil)\n+\treturn gw\n+}\n+`,\n+\t},\n+}"}]}
GET /repos/golang/go/commits/ab5b4283f7a8835c4491e60ffc91b02768b02d0c?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:40:22 GMT
content-type: application/json; charset=utf-8
content-length: 8906
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4754
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "afa1ad97bfd7c1c405ad86167c3f94bd"
last-modified: Thu, 30 Sep 2010 07:33:07 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: 7b641bda7ec2ca7cd9df72d2578baf75
x-github-request-id: 4E320659:4B2A:4398508:56D35B36

{"sha":"ab5b4283f7a8835c4491e60ffc91b02768b02d0c","commit":{"author":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2010-09-30T07:33:07Z"},"committer":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2010-09-30T07:33:07Z"},"message":"release.2010-09-29\n\nR=golang-dev, nigeltao_gnome\nCC=golang-dev\nhttps://golang.org/cl/2329041","tree":{"sha":"5babb6c93dd86c5ff901e46b0f0ffc04782d5606","url":"https://api.github.com/repos/golang/go/git/trees/5babb6c93dd86c5ff901e46b0f0ffc04782d5606"},"url":"https://api.github.com/repos/golang/go/git/commits/ab5b4283f7a8835c4491e60ffc91b02768b02d0c","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/ab5b4283f7a8835c4491e60ffc91b02768b02d0c","html_url":"https://github.com/golang/go/commit/ab5b4283f7a8835c4491e60ffc91b02768b02d0c","comments_url":"https://api.github.com/repos/golang/go/commits/ab5b4283f7a8835c4491e60ffc91b02768b02d0c/comments","author":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"committer":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"parents":[{"sha":"6b2c7ffbab47ea313032e428588fa44d6d1520df","url":"https://api.github.com/repos/golang/go/commits/6b2c7ffbab47ea313032e428588fa44d6d1520df","html_url":"https://github.com/golang/go/commit/6b2c7ffbab47ea313032e428588fa44d6d1520df"}],"stats":{"total":85,"additions":84,"deletions":1},"files":[{"sha":"8f011d1c7688b87fd196ada775ab14dbfdef35dd","filename":".hgtags","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/golang/go/blob/ab5b4283f7a8835c4491e60ffc91b02768b02d0c/.hgtags","raw_url":"https://github.com/golang/go/raw/ab5b4283f7a8835c4491e60ffc91b02768b02d0c/.hgtags","contents_url":"https://api.github.com/repos/golang/go/contents/.hgtags?ref=ab5b4283f7a8835c4491e60ffc91b02768b02d0c","patch":"@@ -31,4 +31,3 @@ db904d88dc0ebf6ee5b55e44088915695c1223ee release.2010-07-29\n 92fcf05736e8565a485adc52da1894270e06ed09 release.2010-09-06\n 9329773e204fed50ec686ee78cc715b624bf1b1d release.2010-09-15\n 1eec33c03bceef5d7607ea4636185f7bf773e0e4 release.2010-09-22\n-1eec33c03bceef5d7607ea4636185f7bf773e0e4 release"},{"sha":"a45ad704b0cd355893bd2b8113127754ca7384e8","filename":"doc/devel/release.html","status":"modified","additions":84,"deletions":0,"changes":84,"blob_url":"https://github.com/golang/go/blob/ab5b4283f7a8835c4491e60ffc91b02768b02d0c/doc/devel/release.html","raw_url":"https://github.com/golang/go/raw/ab5b4283f7a8835c4491e60ffc91b02768b02d0c/doc/devel/release.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/devel/release.html?ref=ab5b4283f7a8835c4491e60ffc91b02768b02d0c","patch":"@@ -5,6 +5,90 @@ <h2 id=\"Releases\">Release History</h2>\n <p>This page summarizes the changes between tagged releases of Go.\n For full details, see the <a href=\"http://code.google.com/p/go/source/list\">Mercurial change log</a>.</p>\n \n+<h3 id=\"2010-09-29\">2010-09-29</h3>\n+\n+<pre>\n+This release includes some minor language changes and some significant package\n+changes. You may need to change your code if you use ...T parameters or the\n+http package.\n+\n+The semantics and syntax of forwarding ...T parameters have changed.\n+        func message(f string, s ...interface{}) { fmt.Printf(f, s) }\n+Here, s has type []interface{} and contains the parameters passed to message.\n+Before this language change, the compiler recognized when a function call\n+passed a ... parameter to another ... parameter of the same type, and just\n+passed it as though it was a list of arguments.  But this meant that you\n+couldn't control whether to pass the slice as a single argument and you\n+couldn't pass a regular slice as a ... parameter, which can be handy.  This\n+change gives you that control at the cost of a few characters in the call.\n+If you want the promotion to ...,  append ... to the argument:\n+        func message(f string, s ...interface{}) { fmt.Printf(f, s...) }\n+Without the ..., s would be passed to Printf as a single argument of type\n+[]interface{}.  The bad news is you might need to fix up some of your code, \n+but the compiler will detect the situation and warn you.\n+\n+Also, the http.Handler and http.HandlerFunc types have changed. Where http\n+handler functions previously accepted an *http.Conn, they now take an interface\n+type http.ResponseWriter. ResponseWriter implements the same methods as *Conn,\n+so in most cases the only change required will be changing the type signature\n+of your handler function's first parameter. See:\n+  http://golang.org/pkg/http/#Handler\n+\n+The utf8 package has a new type, String, that provides efficient indexing \n+into utf8 strings by rune (previously an expensive conversion to []int \n+was required). See:\n+  http://golang.org/pkg/utf8/#String\n+\n+The compiler will now automatically insert a semicolon at the end of a file if\n+one is not found. This effect of this is that Go source files are no longer\n+required to have a trailing newline.\n+\n+Other changes:\n+* 6prof: more accurate usage message.\n+* archive/zip: new package for reading Zip files.\n+* arm: fix code generation, 10 more package tests pass.\n+* asn1: make interface consistent with json.\n+* bufio.UnreadRune: fix bug at EOF.\n+* build: clear custom variables like GREP_OPTIONS,\n+        silence warnings generated by ubuntu gcc,\n+        use full path when compiling libraries.\n+* bytes, strings: change lastIndexFunc to use DecodeLastRune (thanks Roger Peppe).\n+* doc: add to and consolidate non-english doc references,\n+        consolidate FAQs into a single file, go_faq.html,\n+        updates for new http interface.\n+* fmt/Printf: document and tweak error messages produced for bad formats.\n+* gc: allow select case expr = <-c,\n+        eliminate duplicates in method table,\n+        fix reflect table method receiver,\n+        improve error message for x \\= 0.\n+* go/scanner: treat EOF like a newline for purposes of semicolon insertion.\n+* gofmt: stability improvements.\n+* gotest: leave _testmain.go for \"make clean\" to clean up.\n+* http: correct escaping of different parts of URL,\n+        support HTTP/1.0 Keep-Alive.\n+* json: do not write to unexported fields.\n+* libcgo: don't build for NaCl,\n+        set g, m in thread local storage for windows 386 (thanks Wei Guangjing).\n+* math: Fix off-by-one error in Ilogb and Logb.  (thanks Charles L. Dorian).\n+* misc/dashboard/builder: remove build files after benchmarking.\n+* nacl: update instructions for new SDK.\n+* net: enable v4-over-v6 on ip sockets,\n+        fix crash in DialIP.\n+* os: check for valid arguments in windows Readdir (thanks Peter Mundy).\n+* runtime: add mmap of null page just in case,\n+        correct stats in SysFree,\n+        fix unwindstack crash.\n+* syscall: add IPPROTO_IPV6 and IPV6_V6ONLY const to fix nacl and windows build,\n+        add inotify on Linux (thanks Balazs Lecz),\n+        fix socketpair in syscall_bsd,\n+        fix windows value of IPV6_V6ONLY (thanks Alex Brainman),\n+        implement windows version of Utimes (thanks Alex Brainman),\n+        make mkall.sh work for nacl.\n+* test: Add test that causes incorrect error from gccgo.\n+* utf8: add DecodeLastRune and DecodeLastRuneInString (thanks Roger Peppe).\n+* xml: Allow entities inside CDATA tags (thanks Dan Sinclair).\n+</pre>\n+\n <h3 id=\"2010-09-22\">2010-09-22</h3>\n \n <pre>"}]}
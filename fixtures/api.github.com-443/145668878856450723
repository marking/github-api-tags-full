GET /repos/golang/go/commits/f538f2432eba1ca4f38bb919d795d6e9101ed374?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:39:17 GMT
content-type: application/json; charset=utf-8
content-length: 12476
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4791
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "d10ef29425be10ecb8afde5a4cfd221a"
last-modified: Wed, 16 Mar 2011 05:24:08 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: a51acaae89a7607fd7ee967627be18e4
x-github-request-id: 4E320659:3F87:154431F:56D35AF5

{"sha":"f538f2432eba1ca4f38bb919d795d6e9101ed374","commit":{"author":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-03-16T05:24:08Z"},"committer":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-03-16T05:24:08Z"},"message":"weekly.2011-03-15\n\nR=r\nCC=golang-dev\nhttps://golang.org/cl/4272052","tree":{"sha":"345ef08a96ecadf88294ca8569ab2f09b752c923","url":"https://api.github.com/repos/golang/go/git/trees/345ef08a96ecadf88294ca8569ab2f09b752c923"},"url":"https://api.github.com/repos/golang/go/git/commits/f538f2432eba1ca4f38bb919d795d6e9101ed374","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/f538f2432eba1ca4f38bb919d795d6e9101ed374","html_url":"https://github.com/golang/go/commit/f538f2432eba1ca4f38bb919d795d6e9101ed374","comments_url":"https://api.github.com/repos/golang/go/commits/f538f2432eba1ca4f38bb919d795d6e9101ed374/comments","author":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"committer":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"parents":[{"sha":"eb864e92db76b3c4e638bf02dc39df5d01f9b3b9","url":"https://api.github.com/repos/golang/go/commits/eb864e92db76b3c4e638bf02dc39df5d01f9b3b9","html_url":"https://github.com/golang/go/commit/eb864e92db76b3c4e638bf02dc39df5d01f9b3b9"}],"stats":{"total":117,"additions":114,"deletions":3},"files":[{"sha":"026e7b50612343cbd4d28dfde64263dbd4177126","filename":".hgtags","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/golang/go/blob/f538f2432eba1ca4f38bb919d795d6e9101ed374/.hgtags","raw_url":"https://github.com/golang/go/raw/f538f2432eba1ca4f38bb919d795d6e9101ed374/.hgtags","contents_url":"https://api.github.com/repos/golang/go/contents/.hgtags?ref=f538f2432eba1ca4f38bb919d795d6e9101ed374","patch":"@@ -54,6 +54,5 @@ b2be017f91348d5f8cbaf42f77a99fc905044b59 weekly.2011-02-15\n 322350d6fdbf11d9c404d6fc766349d824031339 weekly.2011-02-24\n 21848430d60167817ca965c813a2118068ca660f weekly.2011-03-07\n c5c62aeb6267e124cf05f9622e28dbd0dc6b971d weekly.2011-03-07.1\n-c5c62aeb6267e124cf05f9622e28dbd0dc6b971d weekly\n c5c62aeb6267e124cf05f9622e28dbd0dc6b971d release.r56\n c5c62aeb6267e124cf05f9622e28dbd0dc6b971d release"},{"sha":"d90f1d946b1f737951ca672d34429496cd166982","filename":"doc/devel/release.html","status":"modified","additions":114,"deletions":2,"changes":116,"blob_url":"https://github.com/golang/go/blob/f538f2432eba1ca4f38bb919d795d6e9101ed374/doc/devel/release.html","raw_url":"https://github.com/golang/go/raw/f538f2432eba1ca4f38bb919d795d6e9101ed374/doc/devel/release.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/devel/release.html?ref=f538f2432eba1ca4f38bb919d795d6e9101ed374","patch":"@@ -5,6 +5,118 @@ <h2 id=\"Releases\">Release History</h2>\n <p>This page summarizes the changes between tagged releases of Go.\n For full details, see the <a href=\"http://code.google.com/p/go/source/list\">Mercurial change log</a>.</p>\n \n+<h3 id=\"2011-03-15\">2011-03-15</h3>\n+\n+<pre>\n+This week's release introduces a new release tagging scheme. We intend to\n+continue with our weekly releases, but have renamed the existing tags from\n+\"release\" to \"weekly\". The \"release\" tag will now be applied to one hand-picked\n+stable release each month or two.\n+\n+The revision formerly tagged \"release.2011-03-07.1\" (now \"weekly.2011-03-07.1\") has been nominated our first stable release, and has been given the tag \"release.r56\". As we tag each stable release we will post an announcement to the new golang-announce mailing list:\n+  http://groups.google.com/group/golang-announce\n+\n+You can continue to keep your Go installation updated using \"hg update release\", but now you should only need to update once we tag a new stable release, which we will announce here. If you wish to stay at the leading edge, you should switch to the weekly tag with \"hg update weekly\".\n+\n+\n+This weekly release includes significant changes to the language spec and the http, os, and syscall packages. Your code may need to be changed. It also introduces the new gofix tool.\n+\n+The closed function has been removed from the language. The syntax for channel receives has been changed to return an optional second value, a boolean value indicating whether the channel is closed. This code:\n+v := <-ch\n+if closed(ch) {\n+\t// channel is closed\n+}\n+should now be written as:\n+v, ok := <-ch\n+if !ok {\n+\t// channel is closed\n+}\n+\n+It is now illegal to declare unused labels, just as it is illegal to declare unused local variables.\n+\n+The new gofix tool finds Go programs that use old APIs and rewrites them to use newer ones.  After you update to a new Go release, gofix helps make the necessary changes to your programs. Gofix will handle the http, os, and syscall package changes described below, and we will update the program to keep up with future changes to the libraries.\n+\n+The Hijack and Flush methods have been removed from the http.ResponseWriter interface and are accessible via the new http.Hijacker and http.Flusher interfaces. The RemoteAddr and UsingTLS methods have been moved from http.ResponseWriter to http.Request. The \n+\n+The http.ResponseWriter interface's SetHeader method has been replaced by a Header() method that returns the response's http.Header. Caller code needs to change. This code:\n+\trw.SetHeader(\"Content-Type\", \"text/plain\")\n+should now be written as:\n+rw.Header().Set(\"Content-Type\", \"text/plain\")\n+The os and syscall packages' StartProcess functions now take their final three arguments as an *os.ProcAttr and *syscall.ProcAttr values, respectively. This code:\n+os.StartProcess(bin, args, env, dir, fds)\n+should now be written as:\n+\tos.StartProcess(bin, args, &os.ProcAttr{Files: fds, Dir: dir, Env: env})\n+\n+The gob package will now encode and decode values of types that implement the gob.GobEncoder and gob.GobDecoder interfaces. This allows types with unexported fields to transmit self-consistent descriptions; one instance is big.Int and big.Rat.\n+\n+Other changes:\n+* 5l, 6l, 8l: reduce binary size about 40% by omitting symbols for type, string, go.string.\n+* 5l, 8l: output missing section symbols (thanks Anthony Martin).\n+* 6l, 8l: fix gdb crash.\n+* Make.cmd: also clean _test* (thanks Gustavo Niemeyer).\n+* big: implemented custom Gob(En/De)coder for Int type.\n+* build: remove duplicate dependency in Make.cmd (thanks Robert Hencke),\n+        run gotest in misc/cgo/test.\n+* codereview.py: don't suggest change -d if user is not CL author (thanks Robert Hencke).\n+* compress/lzw: benchmark a range of input sizes.\n+* crypto/ecdsa: add package.\n+* crypto/elliptic: add the N value of each curve.\n+* crypto/openpgp: bug fixes and fix misnamed function.\n+* crypto/tls: fix compile error (thanks Dave Cheney).\n+* doc: Effective Go: some small cleanups,\n+        update FAQ. hello, world is now 1.1MB, down from 1.8MB,\n+        update codelab wiki to fix template.Execute argument order.\n+* flag: visit the flags in sorted order, for nicer messages.\n+* fmt: do not export EOF = -1.\n+* fmt: make ScanState.Token more general (thanks Roger Peppe).\n+* gc: diagnose unused labels,\n+        fix handling of return values named _,\n+        include all dependencies in export metadata,\n+        make unsafe.Pointer its own kind of type, instead of an equivalent to *any.\n+* go/ast, go/parser: populate identifier scopes at parse time.\n+* go/ast: add FileSet parameter to ast.Print and ast.Fprint.\n+* go/parser: first constant in a constant declaration must have a value.\n+* gob: efficiency and reliability fixes.\n+* gofmt: remove -trace and -ast flags.\n+* goinstall: handle $(GOOS) and $(GOARCH) in filenames,\n+        handle .c files with gc when cgo isn't used, and\n+        handle .s files with gc (thanks Gustavo Niemeyer).\n+* gopack: omit time stamps, makes output deterministic.\n+* gotype: commandline tool to typecheck go programs.\n+* govet: handle '*' in print format strings.\n+* hash: new FNV-1a implementation (thanks Pascal S. de Kloe).\n+* http/cgi: child support (e.g. Go CGI under Apache).\n+* http: adapt Cookie code to follow IETF draft (thanks Petar Maymounkov),\n+        add test for fixed HTTP/1.0 keep-alive issue,\n+        don't hit external network in client_test.go,\n+        fix transport crash when request URL is nil,\n+        rename interface Transport to RoundTripper,\n+        run tests even with DISABLE_NET_TESTS=1.\n+* httptest: default the Recorder status code to 200 on a Write.\n+* io/ioutil: clean-up of ReadAll and ReadFile.\n+* ioutil: add NopCloser.\n+* ld: preserve symbol sizes during data layout.\n+* lib9, libmach: Change GOOS references to GOHOSTOS (thanks Evan Shaw).\n+* libmach: correct string comparison to revive 6cov on darwin (thanks Dave Cheney).\n+* misc/vim: Add indent script for Vim (thanks Ross Light).\n+* net, os, syslog: fixes for Solaris support.\n+* net: don't loop to drain wakeup pipe.\n+* nm: document -S flag.\n+* openpgp: add PublicKey KeyId string accessors.\n+* rpc: optimizations, add benchmarks and memory profiling,\n+        use httptest.Server for tests (thanks Robert Hencke).\n+* runtime: reduce lock contention via wakeup on scheduler unlock,\n+        scheduler, cgo reorganization,\n+        split non-debugging malloc interface out of debug.go into mem.go.\n+* spec: clarify return statement rules.\n+* strings: add IndexRune tests, ASCII fast path,\n+        better benchmark names; add BenchmarkIndex.\n+* syscall: implement Mount and Unmount for linux,\n+        implement Reboot for linux.\n+* time: fix Time.ZoneOffset documentation (thanks Peter Mundy).\n+* tls: move PeerCertificates to ConnectionState.\n+</pre>\n+\n <h3 id=\"2011-03-07\">2011-03-07 (r56)</h3>\n \n <pre>\n@@ -135,7 +247,7 @@ <h3 id=\"2011-02-24\">2011-02-24</h3>\n * netchan: allow use of arbitrary connections (thanks Roger Peppe).\n * os: add ENODATA and ENOTCONN (thanks Albert Strasheim).\n * reflect: add a couple of sentences explaining how Methods operate,\n-\tadd a secret method to ArrayOrSliceType to ensure it’s only implemented by arrays and slices,\n+\tadd a secret method to ArrayOrSliceType to ensure it's only implemented by arrays and slices,\n \tadd pointer word to CommonType (placeholder for future work).\n * runtime-gdb.py: gdb pretty printer for go strings properly handles length.\n * runtime: various bug fixes, more complete stack traces,\n@@ -186,7 +298,7 @@ <h3 id=\"2011-02-15\">2011-02-15</h3>\n        fix spaces in GOROOT (thanks Christopher Nielsen).\n * bytes: fix bug in buffer.ReadBytes (thanks Evan Shaw).\n * 5g: better int64 code,\n-       don’t use MVN instruction.\n+       don't use MVN instruction.\n * cgo: don't run cgo when not compiling (thanks Gustavo Niemeyer),\n        fix _cgo_run timestamp file order (thanks Gustavo Niemeyer),\n        fix handling of signed enumerations (thanks Gustavo Niemeyer),"}]}
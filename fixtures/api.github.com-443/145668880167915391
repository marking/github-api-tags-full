GET /repos/golang/go/commits/7aa758df0ce7578ff8b4e326eef777d8f10f70c4?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:39:30 GMT
content-type: application/json; charset=utf-8
content-length: 16057
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4781
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "5695641f7f4f35f87db95a3c394f21f2"
last-modified: Tue, 01 Feb 2011 23:59:59 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: e183f7c661b1bbc2c987b3c4dc7b04e0
x-github-request-id: 4E320659:3F85:1187802:56D35B02

{"sha":"7aa758df0ce7578ff8b4e326eef777d8f10f70c4","commit":{"author":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-02-01T23:59:59Z"},"committer":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-02-01T23:59:59Z"},"message":"release.2011-02-01\n\nR=rsc\nCC=golang-dev\nhttps://golang.org/cl/4119050","tree":{"sha":"85592a4813fa94b7a86de5ca2caec9fa855eb5e2","url":"https://api.github.com/repos/golang/go/git/trees/85592a4813fa94b7a86de5ca2caec9fa855eb5e2"},"url":"https://api.github.com/repos/golang/go/git/commits/7aa758df0ce7578ff8b4e326eef777d8f10f70c4","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/7aa758df0ce7578ff8b4e326eef777d8f10f70c4","html_url":"https://github.com/golang/go/commit/7aa758df0ce7578ff8b4e326eef777d8f10f70c4","comments_url":"https://api.github.com/repos/golang/go/commits/7aa758df0ce7578ff8b4e326eef777d8f10f70c4/comments","author":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"committer":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"parents":[{"sha":"1fa41734441ba95f06171db25af7769f6ae26b30","url":"https://api.github.com/repos/golang/go/commits/1fa41734441ba95f06171db25af7769f6ae26b30","html_url":"https://github.com/golang/go/commit/1fa41734441ba95f06171db25af7769f6ae26b30"}],"stats":{"total":176,"additions":160,"deletions":16},"files":[{"sha":"4c0739bbe4cfc489470505e562b0e14246cb8d75","filename":".hgtags","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/golang/go/blob/7aa758df0ce7578ff8b4e326eef777d8f10f70c4/.hgtags","raw_url":"https://github.com/golang/go/raw/7aa758df0ce7578ff8b4e326eef777d8f10f70c4/.hgtags","contents_url":"https://api.github.com/repos/golang/go/contents/.hgtags?ref=7aa758df0ce7578ff8b4e326eef777d8f10f70c4","patch":"@@ -48,4 +48,3 @@ f7e692dc29b02fba8e5d59b967880a347b53607c release.2010-12-02\n 514c7ba501a1dd74d69ea2d0a2b4116802ada2b5 release.2011-01-12\n 72f9cb714f08b98c6a65ab2f2256fad6bb16967a release.2011-01-19\n d8ba80011a986470a54e5262ec125105aa4adc34 release.2011-01-20\n-d8ba80011a986470a54e5262ec125105aa4adc34 release"},{"sha":"f965b5cadac18f46fa88b4b8aef6f299f8d25345","filename":"doc/devel/release.html","status":"modified","additions":160,"deletions":15,"changes":175,"blob_url":"https://github.com/golang/go/blob/7aa758df0ce7578ff8b4e326eef777d8f10f70c4/doc/devel/release.html","raw_url":"https://github.com/golang/go/raw/7aa758df0ce7578ff8b4e326eef777d8f10f70c4/doc/devel/release.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/devel/release.html?ref=7aa758df0ce7578ff8b4e326eef777d8f10f70c4","patch":"@@ -5,6 +5,151 @@ <h2 id=\"Releases\">Release History</h2>\n <p>This page summarizes the changes between tagged releases of Go.\n For full details, see the <a href=\"http://code.google.com/p/go/source/list\">Mercurial change log</a>.</p>\n \n+<h3 id=\"2011-02-01\">2011-02-01</h3>\n+\n+<pre>\n+This release includes significant changes to channel operations and minor\n+changes to the log package. Your code will require modification if it uses\n+channels in non-blocking communications or the log package's Exit functions.\n+\n+Non-blocking channel operations have been removed from the language.\n+The equivalent operations have always been possible using a select statement\n+with a default clause.  If a default clause is present in a select, that clause\n+will execute (only) if no other is ready, which allows one to avoid blocking on\n+a communication.\n+\n+For example, the old non-blocking send operation,\n+\n+\tif ch <- v {\n+\t\t// sent\n+\t} else {\n+\t\t// not sent\n+\t}\n+\n+should be rewritten as,\n+\n+\tselect {\n+\tcase ch <- v:\n+\t\t// sent\n+\tdefault:\n+\t\t// not sent\n+\t}\n+\n+Similarly, this receive,\n+\n+\tv, ok := <-ch\n+\tif ok {\n+\t\t// received\n+\t} else {\n+\t\t// not received\n+\t}\n+\n+should be rewritten as,\n+\n+\tselect {\n+\tcase v := <-ch:\n+\t\t// received\n+\tdefault:\n+\t\t// not received\n+\t}\n+\n+This change is a prelude to redefining the 'comma-ok' syntax for a receive.\n+In a later release, a receive expression will return the received value and an\n+optional boolean indicating whether the channel has been closed. These changes\n+are being made in two stages to prevent this semantic change from silently\n+breaking code that uses 'comma-ok' with receives.\n+There are no plans to have a boolean expression form for sends.\n+\n+Sends to a closed channel will panic immediately. Previously, an unspecified\n+number of sends would fail silently before causing a panic.\n+\n+The log package's Exit, Exitf, and Exitln functions have been renamed Fatal,\n+Fatalf, and Fatalln respectively. This brings them in line with the naming of\n+the testing package. \n+\n+The port to the \"tiny\" operating system has been removed. It is unmaintained\n+and untested. It was a toy to show that Go can run on raw hardware and it\n+served its purpose. The source code will of course remain in the repository\n+history, so it could be brought back if needed later.\n+\n+This release also changes some of the internal structure of the memory\n+allocator in preparation for other garbage collector changes. \n+If you run into problems, please let us know.\n+There is one known issue that we are aware of but have not debugged yet:\n+\thttp://code.google.com/p/go/issues/detail?id=1464&.\n+\n+Other changes in this release:\n+* 5l: document -F, force it on old ARMs (software floating point emulation)\n+* 6g: fix registerization of temporaries (thanks Eoghan Sherry),\n+        fix uint64(uintptr(unsafe.Pointer(&x))).\n+* 6l: Relocate CMOV* instructions (thanks Gustavo Niemeyer),\n+        windows/amd64 port (thanks Wei Guangjing).\n+* 8l: add PE dynexport, emit DWARF in Windows PE, and\n+        code generation fixes (thanks Wei Guangjing).\n+* bufio: make Flush a no-op when the buffer is empty.\n+* bytes: Add Buffer.ReadBytes, Buffer.ReadString (thanks Evan Shaw).\n+* cc: mode to generate go-code for types and variables.\n+* cgo: define CGO_CFLAGS and CGO_LDFLAGS in Go files (thanks Gustavo Niemeyer),\n+        windows/386 port (thanks Wei Guangjing).\n+* codereview: fix windows (thanks Hector Chu),\n+        handle file patterns better,\n+        more ASCII vs. Unicode nonsense.\n+* crypto/dsa: add support for DSA.\n+* crypto/openpgp: add s2k.\n+* crypto/rand: use defer to unlock mutex (thanks Anschel Schaffer-Cohen).\n+* crypto/rsa: correct docstring for SignPKCS1v15.\n+* crypto: add package, a common place to store identifiers for hash functions.\n+* doc/codelab/wiki: update to work with template changes, add to run.bash.\n+* doc/spec: clarify address operators.\n+* ebnflint: exit with non-zero status on error.\n+* encoding/base32: new package (thanks Miek Gieben).\n+* encoding/line: make it an io.Reader too.\n+* exec: use custom error for LookPath (thanks Gustavo Niemeyer).\n+* fmt/doc: define width and precision for strings.\n+* gc: clearer error for struct == struct,\n+        fix send precedence,\n+        handle invalid name in type switch,\n+        special case code for single-op blocking and non-blocking selects.\n+* go/scanner: fix build (adjust scanner EOF linecount).\n+* gob: better debugging, commentary,\n+        make nested interfaces work,\n+        report an error when encoding a non-empty struct with no public fields.\n+* godoc: full text index for whitelisted non-Go files,\n+        show line numbers for non-go files (bug fix).\n+* gofmt -r: match(...) arguments may be nil; add missing guards.\n+* govet: add Panic to the list of functions.\n+* http: add host patterns (thanks Jose Luis Vázquez González),\n+        follow relative redirect in Get.\n+* json: handle capital floating point exponent (1E100) (thanks Pieter Droogendijk).\n+* ld: add -I option to set ELF interpreter,\n+        more robust decoding of reflection type info in generating dwarf.\n+* lib9: update to Unicode 6.0.0.\n+* make.bash: stricter selinux test (don't complain unless it is enabled).\n+* misc/vim: Import/Drop commands (thanks Gustavo Niemeyer),\n+        set 'syntax sync' to a large value (thanks Yasuhiro Matsumoto).\n+* net: fix race condition in test,\n+        return cname in LookupHost.\n+* netchan: avoid race condition in test,\n+        fixed documentation for import (thanks Anschel Schaffer-Cohen).\n+* os: add ETIMEDOUT (thanks Albert Strasheim).\n+* runtime: generate Go defs for C types,\n+        implementation of callback functions for windows (thanks Alex Brainman),\n+        make Walk web browser example work (thanks Hector Chu),\n+        make select fairer,\n+        prefer fixed stack allocator over general memory allocator,\n+        simpler heap map, memory allocation.\n+* scanner: fix Position returned by Scan, Pos,\n+        don't read ahead in Init.\n+* suffixarray: use binary search for both ends of Lookup (thanks Eric Eisner).\n+* syscall: add missing network interface constants (thanks Mikio Hara).\n+* template: treat map keys as zero, not non-existent (thanks Roger Peppe).\n+* time: allow cancelling of After events (thanks Roger Peppe),\n+        support Solaris zoneinfo directory.\n+* token/position: added SetLinesForContent.\n+* unicode: update to unicode 6.0.0.\n+* unsafe: add missing case to doc for Pointer.\n+</pre>\n+\n <h3 id=\"2011-01-20\">2011-01-20</h3>\n \n <pre>\n@@ -26,7 +171,7 @@ <h3 id=\"2011-01-19\">2011-01-19</h3>\n causes bugs, use 5g -N to disable the registerizer and please let us know.\n \n The xml package now allows the extraction of nested XML tags by specifying\n-struct tags of the form “parent>child”. See the XML documentation for an\n+struct tags of the form \"parent>child\". See the XML documentation for an\n example: http://golang.org/pkg/xml/\n \n * 5a, 5l, 6a, 6l, 8a, 8l: handle out of memory, large allocations (thanks Jeff R. Allen).\n@@ -60,7 +205,7 @@ <h3 id=\"2011-01-19\">2011-01-19</h3>\n         avoid nil dereference if /etc/services can't be opened (thanks Corey Thomasson),\n         implement windows timeout (thanks Wei Guangjing).\n * netchan: do not block sends; implement flow control (thanks Roger Peppe).\n-* regexp: reject bare ‘?’. (thanks Ben Lynn)\n+* regexp: reject bare '?'. (thanks Ben Lynn)\n * runtime/cgo: don't define crosscall2 in dummy _cgo_main.c.\n * runtime/debug: new package for printing stack traces from a running goroutine.\n * runtime: add per-pause gc stats,\n@@ -187,16 +332,16 @@ <h3 id=\"2010-12-15\">2010-12-15</h3>\n \n <pre>\n Package crypto/cipher has been started, to replace crypto/block.\n-As part of the changes, rc4.Cipher’s XORKeyStream method signature has changed from\n+As part of the changes, rc4.Cipher's XORKeyStream method signature has changed from\n         XORKeyStream(buf []byte)\n to\n         XORKeyStream(dst, src []byte)\n-to implement the cipher.Stream interface.  If you use crypto/block, you’ll need\n+to implement the cipher.Stream interface.  If you use crypto/block, you'll need\n to switch to crypto/cipher once it is complete.\n \n-Package smtp’s StartTLS now takes a *tls.Config argument.\n+Package smtp's StartTLS now takes a *tls.Config argument.\n \n-Package reflect’s ArrayCopy has been renamed to Copy.  There are new functions\n+Package reflect's ArrayCopy has been renamed to Copy.  There are new functions\n Append and AppendSlice.\n \n The print/println bootstrapping functions now write to standard error.\n@@ -330,7 +475,7 @@ <h3 id=\"2010-12-02\">2010-12-02</h3>\n \n The bytes package has changed. Its Add and AddByte functions have been removed,\n as their functionality is provided by the recently-introduced built-in function\n-“append”. Any code that uses them will need to be changed:\n+\"append\". Any code that uses them will need to be changed:\n s = bytes.Add(s, b)    ->    s = append(s, b...)\n s = bytes.AddByte(b, c)    ->    s = append(s, b)\n s = bytes.Add(nil, c)    ->    append([]byte(nil), c)\n@@ -355,8 +500,8 @@ <h3 id=\"2010-12-02\">2010-12-02</h3>\n and the fields are passed as successive arguments to the formatter,\n by analogy to fmt.Print.\n \n-The utf8 package has changed. The order of EncodeRune’s arguments has been\n-reversed to satisfy the convention of “destination first”.\n+The utf8 package has changed. The order of EncodeRune's arguments has been\n+reversed to satisfy the convention of \"destination first\".\n Any code that uses EncodeRune will need to be updated.\n \n Other changes:\n@@ -494,12 +639,12 @@ <h3 id=\"2010-10-27\">2010-10-27</h3>\n The syntax for arrays, slices, and maps of composite literals has been\n simplified. Within a composite literal of array, slice, or map type, elements\n that are themselves composite literals may elide the type if it is identical to\n-the outer literal’s element type. For example, these expressions:\n+the outer literal's element type. For example, these expressions:\n \t[][]int{[]int{1, 2, 3}, []int{4, 5}}\n-\tmap[string]Point{“x”: Point{1.5, -3.5}, “y”: Point{0, 0}}\n+\tmap[string]Point{\"x\": Point{1.5, -3.5}, \"y\": Point{0, 0}}\n can be simplified to:\n \t[][]int{{1, 2, 3}, {4, 5}}\n-\tmap[string]Point{“x”: {1.5, -3.5}, “y”: {0, 0}}\n+\tmap[string]Point{\"x\": {1.5, -3.5}, \"y\": {0, 0}}\n Gofmt can make these simplifications mechanically when invoked with the \n new -s flag.\n \n@@ -515,8 +660,8 @@ <h3 id=\"2010-10-27\">2010-10-27</h3>\n registered ahead of time with the new Register function. These changes required\n a backwards-incompatible change to the wire format.  Data written with the old\n version of the package will not be readable with the new one, and vice versa.\n-(Steps were made in this change to make sure this doesn’t happen again.) \n-We don’t know of anyone using gobs to create permanent data, but if you do this\n+(Steps were made in this change to make sure this doesn't happen again.) \n+We don't know of anyone using gobs to create permanent data, but if you do this\n and need help converting, please let us know, and do not update to this release\n yet.  We will help you convert your data.\n \n@@ -612,7 +757,7 @@ <h3 id=\"2010-10-13\">2010-10-13</h3>\n \n The language change is that uses of pointers to interface values no longer\n automatically dereference the pointer.  A pointer to an interface value is more\n-often a beginner’s bug than correct code.\n+often a beginner's bug than correct code.\n \n The package exp/iterable has been removed. It was an interesting experiment,\n but it encourages writing inefficient code and has outlived its utility."}]}
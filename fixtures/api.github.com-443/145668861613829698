GET /repos/golang/go/commits/9dd07f680a4a8ddb0f750a0de89ccc880e322147?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:36:25 GMT
content-type: application/json; charset=utf-8
content-length: 10373
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4847
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "179e9dd7d1718acfd6f0399479ed93a2"
last-modified: Thu, 01 Dec 2011 05:17:24 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: 2811da37fbdda4367181b328b22b2499
x-github-request-id: 4E320659:3F84:D0A7A8:56D35A49

{"sha":"9dd07f680a4a8ddb0f750a0de89ccc880e322147","commit":{"author":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-12-01T05:17:24Z"},"committer":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-12-01T05:17:24Z"},"message":"weekly.2011-12-01\n\nR=golang-dev, r\nCC=golang-dev\nhttps://golang.org/cl/5448067","tree":{"sha":"8fddb61589c0ef122bd7e5f517efd5da8b4c5a82","url":"https://api.github.com/repos/golang/go/git/trees/8fddb61589c0ef122bd7e5f517efd5da8b4c5a82"},"url":"https://api.github.com/repos/golang/go/git/commits/9dd07f680a4a8ddb0f750a0de89ccc880e322147","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/9dd07f680a4a8ddb0f750a0de89ccc880e322147","html_url":"https://github.com/golang/go/commit/9dd07f680a4a8ddb0f750a0de89ccc880e322147","comments_url":"https://api.github.com/repos/golang/go/commits/9dd07f680a4a8ddb0f750a0de89ccc880e322147/comments","author":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"committer":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"parents":[{"sha":"68e30a9765ca2fc596af32e75935b33c27c3d59b","url":"https://api.github.com/repos/golang/go/commits/68e30a9765ca2fc596af32e75935b33c27c3d59b","html_url":"https://github.com/golang/go/commit/68e30a9765ca2fc596af32e75935b33c27c3d59b"}],"stats":{"total":132,"additions":131,"deletions":1},"files":[{"sha":"a1da34cb940b43be308c9f4761bb9f649d43c1c6","filename":".hgtags","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/golang/go/blob/9dd07f680a4a8ddb0f750a0de89ccc880e322147/.hgtags","raw_url":"https://github.com/golang/go/raw/9dd07f680a4a8ddb0f750a0de89ccc880e322147/.hgtags","contents_url":"https://api.github.com/repos/golang/go/contents/.hgtags?ref=9dd07f680a4a8ddb0f750a0de89ccc880e322147","patch":"@@ -95,4 +95,3 @@ e69e528f2afc25a8334cfb9359fa4fcdf2a934b6 weekly.2011-11-01\n f4397ad6e87c7ce5feac9b01686f1ebd6cbaac4e weekly.2011-11-08\n 2f4482b89a6b5956828872137b6b96636cd904d3 weekly.2011-11-09\n b4a91b6933748db1a7150c06a1b55ad506e52906 weekly.2011-11-18\n-b4a91b6933748db1a7150c06a1b55ad506e52906 weekly"},{"sha":"c44028f7cfd3e8917ba1cf37a8f22663f239f60b","filename":"doc/devel/weekly.html","status":"modified","additions":131,"deletions":0,"changes":131,"blob_url":"https://github.com/golang/go/blob/9dd07f680a4a8ddb0f750a0de89ccc880e322147/doc/devel/weekly.html","raw_url":"https://github.com/golang/go/raw/9dd07f680a4a8ddb0f750a0de89ccc880e322147/doc/devel/weekly.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/devel/weekly.html?ref=9dd07f680a4a8ddb0f750a0de89ccc880e322147","patch":"@@ -14,6 +14,137 @@\n hg update weekly.<i>YYYY-MM-DD</i>\n </pre>\n \n+<h2 id=\"2011-12-01\">2011-12-01</h2>\n+\n+<pre>\n+This weekly snapshot includes changes to the time, os, and text/template\n+packages. The changes to the time and os packages are significant and related.\n+Code that uses package time, package text/template, or package os's FileInfo\n+type will require changes.\n+\n+In package time, there is now one type - time.Time - to represent times.\n+Note that time.Time should be used as a value, in contrast to old code\n+which typically used a *time.Time, a pointer to a large struct.  (Drop the *.)\n+Any function that previously accepted a *time.Time, an int64\n+number of seconds since 1970, or an int64 number of nanoseconds\n+since 1970 should now accept a time.Time.  Especially as a replacement\n+for the int64s, the type is good documentation about the meaning of\n+its value.\n+\n+Whether you were previously calling time.Seconds, time.Nanoseconds,\n+time.LocalTime, or time.UTC, the replacement is the new function\n+time.Now.\n+\n+If you previously wrote code like:\n+\n+       t0 := time.Nanoseconds()\n+       myFunction()\n+       t1 := time.Nanoseconds()\n+       delta := t1 - t0\n+       fmt.Printf(\"That took %.2f seconds\\n\", float64(t1-t0)/1e9)\n+\n+you can now write:\n+\n+       t0 := time.Now()\n+       myFunction()\n+       t1 := time.Now()\n+       delta := t1.Sub(t0)\n+       fmt.Printf(\"That took %s\\n\", delta)\n+\n+In this snippet, the variable delta is of the new type time.Duration, the\n+replacement for the many int64 parameters that were nanosecond\n+counts (but not since 1970).\n+\n+Gofix can do the above conversions and some others, but it does not\n+rewrite explicit int64 types as time.Time. It is very likely that you will\n+need to edit your program to change these types after running gofix.\n+As always, be sure to read the changes that gofix makes using your\n+version control system's diff feature.\n+\n+See http://weekly.golang.org/pkg/time/ for details.\n+\n+In package os, the FileInfo struct is replaced by a FileInfo interface,\n+admitting implementations by code beyond the operating system.\n+Code that refers to *os.FileInfo (a pointer to the old struct) should\n+instead refer to os.FileInfo (the new interface).\n+The interface has just a few methods:\n+\n+       type FileInfo interface {\n+               Name() string       // base name of the file\n+               Size() int64        // length in bytes\n+               Mode() FileMode     // file mode bits\n+               ModTime() time.Time // modification time\n+               IsDir() bool        // abbreviation for Mode().IsDir()\n+       }\n+\n+If you need access to the underlying stat_t provided by the operating\n+system kernel, you can access it by assuming that the FileInfo you are\n+holding is actually an *os.FileStat, and that it's Sys field is actually a\n+*syscall.Stat_t, as in:\n+\n+       dev := fi.(*os.FileStat).Sys.(*syscall.Stat_t).Dev\n+\n+Of course, this is not necessarily portable across different operating\n+systems.\n+\n+Gofix will take care of rewriting *os.FileInfo to os.FileInfo for you,\n+and it will also rewrite expressions like fi.Name into calls like fi.Name().\n+\n+See http://weekly.golang.org/pkg/os/#FileInfo for details.\n+\n+The template package has been changed to export a new, simpler API.\n+The Set type is gone. Instead, templates are automatically associated by\n+being parsed together; nested definitions implicitly create associations.\n+Only associated templates can invoke one another.\n+This approach dramatically reduces the breadth of the construction API.\n+The html/template package has been updated also.\n+There's a gofix for the simplest and most common uses of the old API.\n+Code that doesn't mention the Set type is likely to work after running gofix;\n+code that uses Set will need to be updated by hand.\n+The template definition language itself is unchanged.\n+\n+See http://weekly.golang.org/pkg/text/template/ for details.\n+\n+\n+Other changes:\n+* cgo: add support for callbacks from dynamic libraries.\n+* codereview: gofmt check for non-src/ files (thanks David Crawshaw).\n+* crypto/openpgp/packet: fix private key checksum.\n+* crypto/tls: add openbsd root certificate location,\n+\tdon't rely on map iteration order.\n+* crypto/x509, crypto/tls: support PKCS#8 private keys.\n+* dashboard: start of reimplementation in Go for App Engine.\n+* encoding/xml: fix copy bug.\n+* exp/gui: move exp/gui and exp/gui/x11 to http://code.google.com/p/x-go-binding\n+* exp/ssh: various improvements (thanks Dave Cheney and Gustav Paul).\n+* filepath/path: fix Rel buffer sizing (thanks Gustavo Niemeyer).\n+* gc: fix Nconv bug (thanks Rémy Oudompheng) and other fixes.\n+* go/printer, gofmt: performance improvements.\n+* gofix: test and fix missorted renames.\n+* goinstall: add -fix flag to run gofix on packages on build failure,\n+\tbetter error reporting,\n+\tdon't hit network unless a checkout or update is required,\n+\tsupport Google Code sub-repositories.\n+* html: parser improvements (thanks Andrew Balholm).\n+* http: fix sniffing bug causing short writes.\n+* json: speed up encoding, caching reflect calls.\n+* ld: align ELF data sections.\n+* math/big: fix destination leak into result value (thanks Roger Peppe),\n+\tuse recursive subdivision for significant speedup.\n+* math: faster Cbrt and Sincos (thanks Charles L. Dorian).\n+* misc/osx: scripts to make OS X package and disk image (thanks Scott Lawrence).\n+* os: fail if Open(\"\") is called on windows (thanks Alex Brainman).\n+* runtime: make sure stack is 16-byte aligned on syscall (thanks Alex Brainman).\n+* spec, gc: allow direct conversion between string and named []byte, []rune.\n+* sql: add Tx.Stmt to use an existing prepared stmt in a transaction,\n+\tmore driver docs & tests; no functional changes.\n+* strings: add ContainsAny and ContainsRune (thanks Scott Lawrence).\n+* syscall: add SUSv3 RLIMIT/RUSAGE constants (thanks Sébastien Paolacci),\n+\tfix openbsd sysctl hostname/domainname workaround,\n+\timplement Syscall15 (thanks Alex Brainman).\n+* time: fix Timer stop.\n+</pre>\n+\n <h2 id=\"2011-11-18\">2011-11-18</h2>\n \n <pre>"}]}
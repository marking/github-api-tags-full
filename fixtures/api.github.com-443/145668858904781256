GET /repos/golang/go/commits/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:35:58 GMT
content-type: application/json; charset=utf-8
content-length: 10378
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4867
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "5d1ff3bdae087d0c802cada1b00a6cb3"
last-modified: Thu, 23 Feb 2012 05:40:13 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: a30e6f9aa7cf5731b87dfb3b9992202d
x-github-request-id: 4E320659:6DB1:418FF67:56D35A2E

{"sha":"6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f","commit":{"author":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2012-02-23T05:40:13Z"},"committer":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2012-02-23T05:40:13Z"},"message":"weekly.2012-02-22\n\nR=golang-dev, r, bradfitz\nCC=golang-dev\nhttps://golang.org/cl/5698043","tree":{"sha":"25d1c2ed4b7a92fc54740247deeb19eda67553cf","url":"https://api.github.com/repos/golang/go/git/trees/25d1c2ed4b7a92fc54740247deeb19eda67553cf"},"url":"https://api.github.com/repos/golang/go/git/commits/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f","html_url":"https://github.com/golang/go/commit/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f","comments_url":"https://api.github.com/repos/golang/go/commits/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f/comments","author":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"committer":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"parents":[{"sha":"a5b59645240e2e7b5304d5d869acb801f2b7ef00","url":"https://api.github.com/repos/golang/go/commits/a5b59645240e2e7b5304d5d869acb801f2b7ef00","html_url":"https://github.com/golang/go/commit/a5b59645240e2e7b5304d5d869acb801f2b7ef00"}],"stats":{"total":120,"additions":119,"deletions":1},"files":[{"sha":"48827d118d2f0790ffcbfcf6da284ed66e2a3f5a","filename":".hgtags","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/golang/go/blob/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f/.hgtags","raw_url":"https://github.com/golang/go/raw/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f/.hgtags","contents_url":"https://api.github.com/repos/golang/go/contents/.hgtags?ref=6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f","patch":"@@ -105,4 +105,3 @@ b4a91b6933748db1a7150c06a1b55ad506e52906 weekly.2011-11-18\n 1107a7d3cb075836387adfab5ce56d1b3e56637d weekly.2012-01-27\n 52ba9506bd993663a0a033c2bd68699e25d061ab weekly.2012-02-07\n 43cf9b39b6477d3144b0353ee91096e55db6107f weekly.2012-02-14\n-43cf9b39b6477d3144b0353ee91096e55db6107f weekly"},{"sha":"032a1e90815de8165c7e76b857e2ae0eb09d5d75","filename":"doc/devel/weekly.html","status":"modified","additions":119,"deletions":0,"changes":119,"blob_url":"https://github.com/golang/go/blob/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f/doc/devel/weekly.html","raw_url":"https://github.com/golang/go/raw/6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f/doc/devel/weekly.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/devel/weekly.html?ref=6419bbbfd310d0e48b3de60c8891a8f0fcc98b6f","patch":"@@ -14,6 +14,125 @@\n hg update weekly.<i>YYYY-MM-DD</i>\n </pre>\n \n+<h2 id=\"2012-02-22\">2012-02-22</h2>\n+\n+<pre>\n+This weekly snapshot includes changes to the os and runtime packages.\n+\n+This should be the last of the significant incompatible changes before Go 1.\n+\n+There are no longer error constants such as EINVAL in the os package, since the\n+set of values varied with the underlying operating system. There are new\n+portable functions like IsPermission to test common error properties, plus a\n+few new error values with more Go-like names, such as ErrPermission and\n+ErrNoEnv.\n+\n+The os.Getenverror function has been removed. To distinguish between a\n+non-existent environment variable and an empty string, use os.Environ or\n+syscall.Getenv.\n+\n+The Process.Wait method has dropped its option argument and the associated\n+constants are gone from the package. Also, the function Wait is gone; only the\n+method of the Process type persists.\n+\n+The non-portable Waitmsg type has been replaced with the portable ProcessState.\n+\n+Much of the API exported by package runtime has been removed in favor of\n+functionality provided by other packages. Code using the runtime.Type\n+interface or its specific concrete type implementations should now use package\n+reflect.  Code using runtime.Semacquire or runtime.Semrelease should use\n+channels or the abstractions in package sync.\n+\n+The runtime.Alloc, runtime.Free, and runtime.Lookup functions, an unsafe API\n+created for debugging the memory allocator, have no replacement.\n+\n+The runtime.Cgocalls and runtime.Goroutines functions have been renamed to\n+runtime.NumCgoCall and runtime.NumGoroutine.\n+\n+The \"go fix\" command will update code to accommodate most of these changes.\n+\n+Other changes:\n+* 5c, 6c, 8c, 6g, 8g: correct boundary checking (thanks Shenghou Ma).\n+* 5g, 6g, 8g: flush modified globals aggressively.\n+* 8a, 8l: add EMMS instruction (thanks Evan Shaw).\n+* bufio: don't return errors from good Peeks.\n+* build: add make.bash --no-clean option,\n+\timprove Windows support.\n+* builder: reuse existing workspace if possible (thanks Shenghou Ma),\n+\tupdate for os.Wait changes.\n+* bytes: document Compare/Equal semantics for nil arguments, and add tests.\n+* cgo: fix definition of opaque types (thanks Gustavo Niemeyer).\n+* cmd/api: record return type of functions for variable typecheck (thanks Rémy Oudompheng).\n+* cmd/cgo: bug fixes.\n+* cmd/dist: add clang specific -Wno options (thanks Bobby Powers),\n+\tfix install cmd/5g on non-arm system,\n+\tfix pprof permissions (thanks Bobby Powers),\n+\tmake dir check in defaulttarg() more robust (thanks Shenghou Ma),\n+\tuse correct package target when cross-compiling (thanks Alex Brainman).\n+* cmd/gc: correctly typecheck expression lists in returns (thanks Rémy Oudompheng),\n+\tdon't believe that variables mentioned 256 times are unused (thanks Rémy Oudompheng),\n+\terror on constant shift overflows (thanks Rémy Oudompheng),\n+\tfix comparison of struct with _ field.\n+\tfix error for floating-point constant %,\n+\tnew, less strict bool rules.\n+* cmd/go: add tool -n flag,\n+\tgo test -i correctly handle cgo packages (thanks Shenghou Ma).\n+* codereview: fix submit message for new clone URL (thanks Shenghou Ma).\n+* database/sql/driver: API cleanups.\n+* doc: many fixes and adjustments.\n+* encoding/gob: cache engine for user type, not base type,\n+\tcatch internal error when it happens,\n+\tfix mutually recursive slices of structs.\n+* encoding/json: ignore anonymous fields.\n+* go/doc: return Examples in name order.\n+* go/parser: imaginary constants and ! may start an expression.\n+* go/printer, gofmt: improved comma placement.\n+* go/printer: don't lose relevant parentheses when rewriting selector expressions.\n+* godoc: adjust line height in pre blocks,\n+\tdon't print spurious suggestion when running \"go doc foo\",\n+\tfix absolute->relative mapping,\n+\tfix tag mismatch validation errors (thanks Scott Lawrence),\n+\timport example code support,\n+\tsupport flat directory view again.\n+* html/template: add Clone and AddParseTree,\n+\tdon't indirect past a Stringer,\n+\tminor tweak to docs to improve HTML typography.\n+* image: add Decode example.\n+* ld: add NOPTRBSS for large, pointer-free uninitialized data.\n+* math/rand: Intn etc. should panic if their argument is <= 0.\n+* misc/dist/windows: distro builder updates (thanks Joe Poirier).\n+* misc/goplay: remain in work directory, build in temp directory.\n+* net, os, syscall: delete os.EPLAN9 (thanks Mikio Hara).\n+* net/http: add optional Server.TLSConfig field.\n+* net/smtp: use EHLO then HELO.\n+* net/textproto: accept bad MIME headers as browsers do.\n+* net/url: regularise receiver names.\n+* net: make LocalAddr on multicast return group address (thanks Mikio Hara),\n+\tmake parseProcNetIGMP more robust (thanks Mikio Hara),\n+\tmore selfConnect debugging: panic if ra == nil in internetSocket,\n+\tpanic if sockaddrToTCP returns nil incorrectly,\n+\tother miscellaneous fixes.\n+* path, path/filepath: polish documentation (thanks Rémy Oudompheng).\n+* pprof: add Profile type.\n+* runtime: avoid malloc during malloc,\n+\tdefine NSIG to fix plan 9 build (thanks David du Colombier),\n+\tfix FreeBSD signal handling around thread creation (thanks Devon H. O'Dell),\n+\tgoroutine profile, stack dumps,\n+\timplement runtime.osyield on FreeBSD 386, amd64 (thanks Devon H. O'Dell),\n+\tpermit default behaviour of SIGTSTP, SIGTTIN, SIGTTOU,\n+\trelease unused memory to the OS (thanks Sébastien Paolacci),\n+\tremove an obsolete file (thanks Mikio Hara).\n+* spec: make all comparison results untyped bool,\n+\trefine the wording about variables in type switches,\n+\tstruct comparison only compares non-blank fields.\n+* syscall: Make Pdeathsig type Signal in SysProcAttr on Linux (thanks Albert Strasheim),\n+\tfix bounds check in Error,\n+\tforce Windows to always use US English error messages (thanks Shenghou Ma).\n+* test: migrated to new go-based testing framework.\n+* text/template: evaluate function fields.\n+* time: use Go distribution zoneinfo if system copy not found.\n+</pre>\n+\n <h2 id=\"2012-02-14\">2012-02-14</h2>\n \n <pre>"}]}
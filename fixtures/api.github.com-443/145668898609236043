GET /repos/golang/go/commits/9ad14c94db182dd3326e4c80053e0311f47700ce?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:42:35 GMT
content-type: application/json; charset=utf-8
content-length: 6098
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4721
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "1c89c5b0eb4054dfe1a32b4f9759e405"
last-modified: Fri, 06 Nov 2009 18:33:46 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: 5aeb3f30c9e3ef6ef7bcbcddfd9a68f7
x-github-request-id: 4E320659:4B2B:4CE1CC0:56D35BBB

{"sha":"9ad14c94db182dd3326e4c80053e0311f47700ce","commit":{"author":{"name":"Russ Cox","email":"rsc@golang.org","date":"2009-11-06T18:33:46Z"},"committer":{"name":"Russ Cox","email":"rsc@golang.org","date":"2009-11-06T18:33:46Z"},"message":"expand \"this is not just mercurial\" section\n\nR=r\nCC=go-dev\nhttp://go/go-review/1024008","tree":{"sha":"d112c57d41970cd9e5a6b2391af5703684cf040c","url":"https://api.github.com/repos/golang/go/git/trees/d112c57d41970cd9e5a6b2391af5703684cf040c"},"url":"https://api.github.com/repos/golang/go/git/commits/9ad14c94db182dd3326e4c80053e0311f47700ce","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/9ad14c94db182dd3326e4c80053e0311f47700ce","html_url":"https://github.com/golang/go/commit/9ad14c94db182dd3326e4c80053e0311f47700ce","comments_url":"https://api.github.com/repos/golang/go/commits/9ad14c94db182dd3326e4c80053e0311f47700ce/comments","author":{"login":"rsc","id":104030,"avatar_url":"https://avatars.githubusercontent.com/u/104030?v=3","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"committer":{"login":"rsc","id":104030,"avatar_url":"https://avatars.githubusercontent.com/u/104030?v=3","gravatar_id":"","url":"https://api.github.com/users/rsc","html_url":"https://github.com/rsc","followers_url":"https://api.github.com/users/rsc/followers","following_url":"https://api.github.com/users/rsc/following{/other_user}","gists_url":"https://api.github.com/users/rsc/gists{/gist_id}","starred_url":"https://api.github.com/users/rsc/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/rsc/subscriptions","organizations_url":"https://api.github.com/users/rsc/orgs","repos_url":"https://api.github.com/users/rsc/repos","events_url":"https://api.github.com/users/rsc/events{/privacy}","received_events_url":"https://api.github.com/users/rsc/received_events","type":"User","site_admin":false},"parents":[{"sha":"38a41eec67e5a630385f50c0ac58d5e10e153cb5","url":"https://api.github.com/repos/golang/go/commits/38a41eec67e5a630385f50c0ac58d5e10e153cb5","html_url":"https://github.com/golang/go/commit/38a41eec67e5a630385f50c0ac58d5e10e153cb5"}],"stats":{"total":41,"additions":33,"deletions":8},"files":[{"sha":"92190ca37c61a8e2494ba5f4923f76abd91eea9d","filename":"doc/contribute.html","status":"modified","additions":33,"deletions":8,"changes":41,"blob_url":"https://github.com/golang/go/blob/9ad14c94db182dd3326e4c80053e0311f47700ce/doc/contribute.html","raw_url":"https://github.com/golang/go/raw/9ad14c94db182dd3326e4c80053e0311f47700ce/doc/contribute.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/contribute.html?ref=9ad14c94db182dd3326e4c80053e0311f47700ce","patch":"@@ -173,24 +173,51 @@\n it's time to get it reviewed and submitted.\n </p>\n \n-<h2>Installing the code review extension</h2>\n+<h2>Code review</h2>\n \n <p>\n Changes to Go must be reviewed before they are submitted,\n no matter who makes the change.\n+(In exceptional cases, such as fixing a build, the review can\n+follow shortly after submitting.)\n A Mercurial extension helps manage the code review process.\n The extension is included in the Go source tree but needs\n to be added to your Mercurial configuration.\n </p>\n \n+<h3>Caveat for Mercurial aficionados</h3>\n+\n <p>\n <i>Using Mercurial with the code review extension is not the same\n-as using it normally.</i>\n+as using standard Mercurial.</i>\n+</p>\n+\n+<p>\n+The Go repository is maintained as a single line of reviewed changes;\n+we prefer to avoid the complexity of Mercurial's arbitrary change graph.\n+The code review extension helps here: its <code>hg submit</code> command\n+automatically checks for and warns about the local repository\n+being out of date compared to the remote one.\n+The <code>hg submit</code> command also verifies other\n+properties about the Go repository.\n+For example, \n+it checks that Go code being checked in is formatted in the standard style,\n+as defined by <a href=\"/cmd/gofmt\">gofmt</a>,\n+and it checks that the author of the code is properly recorded for\n+<a href=\"#copyright\">copyright purposes</a>.\n </p>\n \n <p>\n-TODO(rsc): note here about model being different.\n-Do not use <code>hg commit</code> if you are using the Mercurial extension.\n+To help ensure changes are only created by <code>hg submit</code>,\n+the code review extension disables the standard <code>hg commit</code>\n+command.\n+</p>\n+\n+<p>\n+Mercurial power users: To allow Go contributors to take advantage of\n+Mercurial's functionality for local revision control, it might be interesting\n+to explore how the code review extension can be made to work alongside\n+the Mercurial Queues extension.\n </p>\n \n <h3>Configure the extension</h3>\n@@ -232,7 +259,7 @@\n \n <p>Edit your <a href=\"http://codereview.prom.corp.google.com/settings\">code review settings</a>.\n Grab a nickname.\n-Many people refer to set the Context option to \n+Many people prefer to set the Context option to \n &ldquo;Whole file&rdquo; to see more context when reviewing changes.\n </p>\n \n@@ -241,7 +268,7 @@\n For example, <code>rsc</code> is an alias for <code>rsc@golang.org</code>.\n </p>\n \n-<h2>Changing code</h2>\n+<h3>Make a change</h3>\n \n <p>\n The entire checked-out tree is writable.\n@@ -255,8 +282,6 @@\n <code>hg mv</code>.\n </p>\n \n-<h3>Create a change</h3>\n-\n <p>When you are ready to send a change out for review, run</p>\n \n <pre>"}]}
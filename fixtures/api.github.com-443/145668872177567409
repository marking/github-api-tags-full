GET /repos/golang/go/commits/b0e3edab0e5439505f6ac79a9a96ab19478a065b?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:38:10 GMT
content-type: application/json; charset=utf-8
content-length: 7864
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4825
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "6dfd6e2aa440c08deb5da5e103eba1fc"
last-modified: Fri, 16 Sep 2011 07:18:36 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: 474556b853193c38f1b14328ce2d1b7d
x-github-request-id: 4E320659:99A7:1239134:56D35AB0

{"sha":"b0e3edab0e5439505f6ac79a9a96ab19478a065b","commit":{"author":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-09-16T07:18:36Z"},"committer":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-09-16T07:18:36Z"},"message":"weekly.2011-09-16\n\nR=golang-dev, dsymonds, r\nCC=golang-dev\nhttps://golang.org/cl/5040042","tree":{"sha":"cdf81b09a9cb819e4a64ce757eb0eba247ec2284","url":"https://api.github.com/repos/golang/go/git/trees/cdf81b09a9cb819e4a64ce757eb0eba247ec2284"},"url":"https://api.github.com/repos/golang/go/git/commits/b0e3edab0e5439505f6ac79a9a96ab19478a065b","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/b0e3edab0e5439505f6ac79a9a96ab19478a065b","html_url":"https://github.com/golang/go/commit/b0e3edab0e5439505f6ac79a9a96ab19478a065b","comments_url":"https://api.github.com/repos/golang/go/commits/b0e3edab0e5439505f6ac79a9a96ab19478a065b/comments","author":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"committer":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"parents":[{"sha":"310e5fe60c71bd8435a7989d1970b739bd5e4463","url":"https://api.github.com/repos/golang/go/commits/310e5fe60c71bd8435a7989d1970b739bd5e4463","html_url":"https://github.com/golang/go/commit/310e5fe60c71bd8435a7989d1970b739bd5e4463"}],"stats":{"total":68,"additions":67,"deletions":1},"files":[{"sha":"005318d0392abf38014f9caa621690771670ad9f","filename":".hgtags","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/golang/go/blob/b0e3edab0e5439505f6ac79a9a96ab19478a065b/.hgtags","raw_url":"https://github.com/golang/go/raw/b0e3edab0e5439505f6ac79a9a96ab19478a065b/.hgtags","contents_url":"https://api.github.com/repos/golang/go/contents/.hgtags?ref=b0e3edab0e5439505f6ac79a9a96ab19478a065b","patch":"@@ -78,6 +78,5 @@ c17ce5ec06b4bd5cf6e7ff2ceb0a60c2e40e0b17 weekly.2011-08-10\n 6eb2b9dbe489acb57a2bfc1de31ec2239ed94326 weekly.2011-08-17\n c934f6f5fe8b30b4b3210ee3f13669e6e4670c32 weekly.2011-09-01\n c77997547d546c36c7b969586a36de7ceda74e33 weekly.2011-09-07\n-c77997547d546c36c7b969586a36de7ceda74e33 weekly\n b0819469a6df6029a27192fe7b19a73d97404c63 release.r60\n b0819469a6df6029a27192fe7b19a73d97404c63 release"},{"sha":"d5f59cadcdfdd2882e1221c6ff9f898d12cdd452","filename":"doc/devel/weekly.html","status":"modified","additions":67,"deletions":0,"changes":67,"blob_url":"https://github.com/golang/go/blob/b0e3edab0e5439505f6ac79a9a96ab19478a065b/doc/devel/weekly.html","raw_url":"https://github.com/golang/go/raw/b0e3edab0e5439505f6ac79a9a96ab19478a065b/doc/devel/weekly.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/devel/weekly.html?ref=b0e3edab0e5439505f6ac79a9a96ab19478a065b","patch":"@@ -14,6 +14,73 @@\n hg update weekly.<i>YYYY-MM-DD</i>\n </pre>\n \n+<h2 id=\"2011-09-16\">2011-09-16</h2>\n+\n+<pre>\n+This weekly snapshot includes changes to the image, path/filepath, and time\n+packages. Code that uses these packages may need to be updated.\n+\n+The image package's NewX functions (NewRGBA, NewNRGBA, etc) have been changed\n+to take a Rectangle argument instead of a width and height.\n+Gofix can make these changes automatically.\n+\n+The path/filepath package's Walk function has been changed to take a WalkFunc\n+function value instead of a Visitor interface value. WalkFunc is like the\n+Visitor's VisitDir and VisitFile methods except it handles both files and\n+directories:\n+\tfunc(path string, info *os.FileInfo, err os.Error) os.Error\n+To skip walking a directory (like returning false from VisitDir) the WalkFunc\n+must return SkipDir.\n+\n+The time package's Time struct's Weekday field has been changed to a method.\n+The value is calculated on demand, avoiding the need to re-parse\n+programmatically-constructed Time values to find the correct weekday.\n+\n+There are no gofixes for the filepath or time API changes, but instances of the\n+old APIs will be caught by the compiler. The Weekday one is easy to update by\n+hand. The Walk one may take more consideration, but will have fewer instances\n+to fix.\n+\n+* build: add build comments to core packages.\n+* codereview: Mercurial 1.9 fix for hg diff @nnn.\n+* crypto/tls: handle non-TLS more robustly,\n+\tsupport SSLv3.\n+* debug/elf: permit another case of SHT_NOBITS section overlap in test.\n+* exm/template/html: more work on this auto-escaping HTML template package.\n+* exp/norm: added regression test tool for the standard Unicode test set.\n+* exp/regexp/syntax: fix invalid input parser crash,\n+\timport all RE2 parse tests + fix bugs.\n+* exp/regexp: add MustCompilePOSIX, CompilePOSIX, leftmost-longest matching.\n+* flag: make zero FlagSet useful.\n+* gc: clean up if grammar.\n+* go/build: handle cgo, // +build comments.\n+* go/printer: use panic/defer instead of goroutine for handling errors.\n+* go/token: support to serialize file sets.\n+* godoc, suffixarray: switch to exp/regexp.\n+* godoc: show packages matching a query at the top,\n+\tsupport for complete index serialization,\n+\tuse go/build to find files in a package.\n+* gofmt: accept program fragments on standard input, add else test.\n+* http/cgi: add openbsd environment configuration.\n+* http: document that Response.Body is non-nil.\n+* image/png: don't use a goroutine to decode, to permit decode during init.\n+* json: if a field's tag is \"-\", ignore the field for encoding and decoding.\n+* ld: grow dwarf includestack on demand.\n+* net, syscall: implement SetsockoptIPMReq(), and\n+\tmove to winsock v2.2 for multicast support (thanks Paul Lalonde).\n+* net: add a LookupTXT function.\n+* os: os.RemoveAll to check for wboth error codes on Windows (thanks Jaroslavas Poƒçepko).\n+* path/filepath: fix Visitor doc (thanks Gustavo Niemeyer),\n+\tmake UNC file names work (thanks Yasuhiro Matsumoto).\n+* runtime: optimizations to channels on Windows (thanks Hector Chu),\n+\tsyscall to return both AX and DX for windows/386 (thanks Alex Brainman).\n+* sync/atomic: add 64-bit Load and Store.\n+* syscall: add route flags for linux (thanks Mikio Hara).\n+* test: add test for inheriting private method from anonymous field.\n+* websocket: fix infinite recursion in Addr.String() (thanks Tarmigan Casebolt),\n+\trename websocket.WebSocketAddr to *websocket.Addr.\n+</pre>\n+\n <h2 id=\"2011-09-07\">2011-09-07</h2>\n \n <pre>"}]}
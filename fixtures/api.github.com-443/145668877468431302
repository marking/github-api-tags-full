GET /repos/golang/go/commits/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6?access_token=token
host: api.github.com
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
server: GitHub.com
date: Sun, 28 Feb 2016 20:39:03 GMT
content-type: application/json; charset=utf-8
content-length: 12501
connection: close
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4800
x-ratelimit-reset: 1456694697
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "ea8cf3eb7efe4fc1d5632b5a617eeed8"
last-modified: Mon, 23 May 2011 06:30:06 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; format=json
access-control-allow-credentials: true
access-control-expose-headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval
access-control-allow-origin: *
content-security-policy: default-src 'none'
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-content-type-options: nosniff
x-frame-options: deny
x-xss-protection: 1; mode=block
x-served-by: 8dd185e423974a7e13abbbe6e060031e
x-github-request-id: 4E320659:3F84:D10254:56D35AE7

{"sha":"f6742e7482c2b4fd1dada85c6318ecd59ccef8f6","commit":{"author":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-05-23T06:30:06Z"},"committer":{"name":"Andrew Gerrand","email":"adg@golang.org","date":"2011-05-23T06:30:06Z"},"message":"weekly.2011-05-22\n\nR=golang-dev, r\nCC=golang-dev\nhttps://golang.org/cl/4523090","tree":{"sha":"c0d4616dcab28fc8aaf26c011ee9e9d6db086eaf","url":"https://api.github.com/repos/golang/go/git/trees/c0d4616dcab28fc8aaf26c011ee9e9d6db086eaf"},"url":"https://api.github.com/repos/golang/go/git/commits/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6","comment_count":0},"url":"https://api.github.com/repos/golang/go/commits/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6","html_url":"https://github.com/golang/go/commit/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6","comments_url":"https://api.github.com/repos/golang/go/commits/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6/comments","author":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"committer":{"login":"adg","id":8446613,"avatar_url":"https://avatars.githubusercontent.com/u/8446613?v=3","gravatar_id":"","url":"https://api.github.com/users/adg","html_url":"https://github.com/adg","followers_url":"https://api.github.com/users/adg/followers","following_url":"https://api.github.com/users/adg/following{/other_user}","gists_url":"https://api.github.com/users/adg/gists{/gist_id}","starred_url":"https://api.github.com/users/adg/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/adg/subscriptions","organizations_url":"https://api.github.com/users/adg/orgs","repos_url":"https://api.github.com/users/adg/repos","events_url":"https://api.github.com/users/adg/events{/privacy}","received_events_url":"https://api.github.com/users/adg/received_events","type":"User","site_admin":false},"parents":[{"sha":"ccafd53ed35b64cfe32b191870e0523d1538f00a","url":"https://api.github.com/repos/golang/go/commits/ccafd53ed35b64cfe32b191870e0523d1538f00a","html_url":"https://github.com/golang/go/commit/ccafd53ed35b64cfe32b191870e0523d1538f00a"}],"stats":{"total":155,"additions":154,"deletions":1},"files":[{"sha":"25d34f1c78fe3b8f8a4d816145372da3e6dba215","filename":".hgtags","status":"modified","additions":0,"deletions":1,"changes":1,"blob_url":"https://github.com/golang/go/blob/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6/.hgtags","raw_url":"https://github.com/golang/go/raw/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6/.hgtags","contents_url":"https://api.github.com/repos/golang/go/contents/.hgtags?ref=f6742e7482c2b4fd1dada85c6318ecd59ccef8f6","patch":"@@ -60,7 +60,6 @@ b84e614e25161f626a6102813c41a80a15e3a625 weekly.2011-03-28\n cd89452cfea3d125aaf75a1ec8004e2f6a868d38 weekly.2011-04-04\n d6903b7fbff40c13ee7ea3177c0ae54c7f89d2e6 weekly.2011-04-13\n 2f0fa51fa2da6ab50fcebba526326153da8ed999 weekly.2011-04-27\n-2f0fa51fa2da6ab50fcebba526326153da8ed999 weekly\n 8493bb64e5592bd20c0e60e78e7f8052c1276fcf release.r57\n 95d2ce135523c96c4cea049af94ce76dd8c7d981 release.r57.1\n 95d2ce135523c96c4cea049af94ce76dd8c7d981 release"},{"sha":"dc734079b6322ef4621d715836695db737fbbea7","filename":"doc/devel/weekly.html","status":"modified","additions":154,"deletions":0,"changes":154,"blob_url":"https://github.com/golang/go/blob/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6/doc/devel/weekly.html","raw_url":"https://github.com/golang/go/raw/f6742e7482c2b4fd1dada85c6318ecd59ccef8f6/doc/devel/weekly.html","contents_url":"https://api.github.com/repos/golang/go/contents/doc/devel/weekly.html?ref=f6742e7482c2b4fd1dada85c6318ecd59ccef8f6","patch":"@@ -14,6 +14,160 @@\n hg update weekly.<i>YYYY-MM-DD</i>\n </pre>\n \n+<h2 id=\"2011-05-22\">2011-05-22</h2>\n+\n+<pre>\n+This release includes changes to the http package that will require changes to\n+client code.\n+\n+The finalURL return value of the Client.Get method has been removed.\n+This value is now accessible via the new Request field on http.Response.\n+For example, this code:\n+\n+\tres, finalURL, err := http.Get(...)\n+\n+should be rewritten as:\n+\n+\tres, err := http.Get(...)\n+\tif err != nil {\n+\t\t// ...\n+\t}\n+\tfinalURL := res.Request.URL.String()\n+\n+Uses of http.Get that assign the finalURL value to _ can be rewritten\n+automatically with gofix.\n+\n+This release also includes an optimization to the append function that makes it\n+between 2 and 5 times faster in typical use cases.\n+\n+Other changes:\n+* 5a, 6a, 8a, cc: remove old environment variables.\n+* 5c, 5g: fix build with too-smart gcc.\n+* 5l, 8l: add ELF symbol table to binary.\n+* 5l: delete pre-ARMv4 instruction implementations, other fixes.\n+* 6l, 8l: emit windows dwarf sections like other platforms (thanks Alex Brainman).\n+* 6l: fix emit windows dwarf sections (thanks Wei Guangjing).\n+* 8g: fix conversion from float to uint64 (thanks Anthony Martin).\n+* Make.cmd: create TARGDIR if necessary (thanks Gustavo Niemeyer).\n+* asn1: add big support.\n+* big: add Int methods to act on numbered bits (thanks Roger Peppe),\n+\tbetter support for string conversions,\n+\tsupport %v and # modifier, better handling of unknown formats.\n+* cgi: export RequestFromMap (thanks Evan Shaw),\n+\tset Request.TLS and Request.RemoteAddr for children.\n+* cgo: use packed struct to fix Windows behavior.\n+* codereview: add release branch support,\n+\tfetch metadata using JSON API, not XML scraping,\n+\thandle 'null as missing field' in rietveld json.\n+* compress/lzw: silently drop implied codes that are too large.\n+* compress/zlib: actually use provided dictionary in NewWriterDict\n+* crypto/openpgp: add key generation support,\n+\tchange PublicKey.Serialize to include the header.\n+* crypto/rand: add utility functions for number generation (thanks Anthony Martin).\n+* crypto/tls: export the verified chains.\n+* crypto/x509/crl: add package.\n+* crypto/x509: export raw SubjectPublicKeyInfo,\n+\tsupport DSA public keys in X.509 certs,\n+\tsupport parsing and verifying DSA signatures (thanks Jonathan Allie).\n+* doc/roadmap: put \"App Engine support\" under \"Done\".\n+* doc: add I/O 2011 talks to talks/, docs.html, and front page.\n+* effective go: explain about values/pointers in String() example,\n+\tupdate to new Open signature.\n+* exp/draw: fast paths for drawing a YCbCr or an NRGBA onto an RGBA.\n+* filepath: make EvalSymlinks work on Windows (thanks Alex Brainman).\n+* flag: allow distinct sets of flags.\n+* gc: fix type switch error message for invalid cases (thanks Lorenzo Stoakes),\n+\tfix unsafe.Sizeof,\n+\tpreserve original expression for errors.\n+* go/ast, go/doc, godoc: consider struct fields and interface methods when filtering ASTs.\n+* go/ast: consider anonymous fields and set Incomplete bit when filtering ASTs,\n+\tproperly maintain map of package global imports.\n+* go/doc, godoc: when filtering for godoc, don't remove elements of a declaration.\n+* go/parser: accept parenthesized receive operations in select statements,\n+\talways introduce an ast.Object when declaring an identifier.\n+* go/printer, gofmt: fix alignment of \"=\" in const/var declarations,\n+\tfix formatting of expression lists (missing blank).\n+* go/printer: added simple performance benchmark,\n+\tmake tests follow syntactic restrictions,\n+\tmore accurate comment for incomplete structs/interfaces,\n+* go/token: faster FileSet.Position implementation.\n+* go/types: type checker API + testing infrastructure.\n+* godoc: added -index flag to enable/disable search index,\n+\tif there is no search box, don't run the respective JS code.\n+* gofmt: update test.sh (exclude a file w/ incorrect syntax).\n+* html: parse empty, unquoted, and single-quoted attribute values.\n+* http/cgi: correctly set request Content-Type (thanks Evan Shaw),\n+\tpass down environment variables for IRIX and Solaris.\n+* http/pprof: fix POST reading bug.\n+* http/spdy: new incomplete package (thanks Ross Light).\n+* http: Client.Do should follow redirects for GET and HEAD,\n+\tadd Header.Write method (thanks Evan Shaw),\n+\tadd Request.SetBasicAuth method,\n+\tadd Transport.ProxySelector,\n+\tadd http.SetCookie(ResponseWriter, *Cookie),\n+\tdon't Clean query string in relative redirects,\n+\tfix FormFile nil pointer dereference on missing multipart form,\n+\tfix racy test with a simpler version,\n+\tfix two Transport gzip+persist crashes,\n+\tinclude Host header in requests,\n+\tmake HEAD client request follow redirects (thanks Eivind Uggedal).\n+\tupdate cookie doc to reference new RFC 6265,\n+\twrite cookies according to RFC 6265 (thanks Christian Himpel).\n+* image/bmp: implement a BMP decoder.\n+* image/gif: new package provides a GIF decoder.\n+* image/jpeg: decode grayscale images, not just color images.\n+\toptimizations and tweaks.\n+* image/png: encode paletted images with alpha channel (thanks Dmitry Chestnykh),\n+\tspeed up opaque RGBA encoding.\n+* image/tiff: implement a decoder (thanks Benny Siegert).\n+* image: add type-specific Set methods and use them when decoding PNG,\n+\tmake AlphaColor.Set conform to usual signature (thanks Roger Peppe),\n+\tpng & jpeg encoding benchmarks.\n+* ld: do not emit reference to dynamic library named \"\",\n+\tfix alignment of rodata section on Plan 9 (thanks Anthony Martin),\n+\tmake ELF binaries with no shared library dependencies static binaries.\n+* make.bash: remove old bash version of gotest on Windows (thanks Alex Brainman).\n+* make: add nuke target for C commands and libs (thanks Anthony Martin).\n+* mime/multipart: add FileName accessor on Part,\n+\tadd Writer,\n+\treturn an error on Reader EOF, not (nil, nil).\n+* misc/cgo/test: run tests.\n+* misc/emacs: use UTF-8 when invoking gofmt as a subprocess (thanks Sameer Ajmani).\n+* misc/vim: new Vim indentation script.\n+* net, http: add and make use of IP address scope identification API (thanks Mikio Hara).\n+* net: default to 127.0.0.1, not localhost, in TestICMP,\n+\tdon't crash on unexpected DNS SRV responses,\n+\tenable SO_REUSEPORT on BSD variants (thanks Mikio Hara),\n+\tprotocol family adaptive address family selection (thanks Mikio Hara),\n+\tre-enable wildcard listening (thanks Mikio Hara),\n+\tsort records returned by LookupSRV (thanks Gary Burd).\n+* os: make Readdir & Readdirnames return os.EOF at end,\n+\tmake Setenv update C environment variables.\n+* reflect: allow unexported key in Value.MapIndex.\n+* runtime, sync/atomic: fix arm cas.\n+* runtime: add newline to \"finalizer already set\" error (thanks Albert Strasheim),\n+\thandle out-of-threads on Linux gracefully (thanks Albert Strasheim),\n+\tfix function args not checked warning on ARM (thanks Dave Cheney),\n+\tmake StackSystem part of StackGuard (thanks Alexey Borzenkov),\n+\tmaybe fix Windows build broken by cgo setenv CL.\n+* spec: clarify semantics of integer division,\n+\tclarify semantics of range clause,\n+\tfix error in production syntax,\n+\tnarrow syntax for expression and select statements,\n+\tnewlines cannot be used inside a char or \"\" string literal,\n+\trestricted expressions may still be parenthesized.\n+* strings: make Reader.Read use copy instead of an explicit loop.\n+* syscall: add Windows file mapping functions and constants (thanks Evan Shaw),\n+\tadd IPv6 scope zone ID support (thanks Mikio Hara),\n+\tadd netlink support for linux/386, linux/amd64, linux/arm (thanks Mikio Hara),\n+\tadd Sendfile,\n+\tadjust freebsd syscalls.master URL properly (thanks Mikio Hara),\n+\tchange Overlapped.HEvent type, it is a handle (thanks Alex Brainman).\n+* syslog: fix skipping of net tests (thanks Gustavo Niemeyer).\n+* template: support string, int and float literals (thanks Gustavo Niemeyer).\n+* xml: fix reflect error.\n+</pre>\n+\n <h2 id=\"2011-04-27\">2011-04-27 (<a href=\"release.html#r57\">base for r57</a>)</h2>\n \n <pre>"}]}